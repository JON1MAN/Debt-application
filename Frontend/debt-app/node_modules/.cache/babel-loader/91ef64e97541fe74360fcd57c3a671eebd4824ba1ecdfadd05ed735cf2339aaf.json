{"ast":null,"code":"var _jsxFileName = \"/Users/amarchuk/Documents/GitHub/DesignLab/DebtApp/Frontend/debt-app/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CustomAlert from './CustomAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n\n  //Const for basic operations like add debt, delete debt, etc.\n  //----------------------------------------------------------\n  const [totalDebt, setTotalDebt] = useState(null);\n  const [debts, setDebts] = useState([]);\n  const [name, setName] = useState(''); // person who is owed\n  const [receiverId, setReceiverId] = useState(''); // person who owes us\n  const [allUsers, setUsers] = useState([]);\n  const [userId, setUserId] = useState(''); // person who owes us\n  const [title, setTitle] = useState('');\n  const [debtValue, setDebtValue] = useState('');\n  //----------------------------------------------------------\n\n  //Const for alert message\n  //----------------------------------------------------------\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  //----------------------------------------------------------\n\n  //Const for calculate debt\n  //----------------------------------------------------------\n  const [numPeople, setNumPeople] = useState(0);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [moneySpent, setMoneySpent] = useState(0);\n  //----------------------------------------------------------\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      //For the test\n      //console.log(token);\n      if (!token) {\n        console.error('No token found');\n        navigate('/login');\n        return;\n      }\n      const username = localStorage.getItem('username');\n      setName(username);\n      try {\n        const response = await fetch(`http://localhost:8080/v1/auth/verifyToken/${token}`);\n        if (!response.ok) {\n          throw new Error('Token is verification failed');\n        }\n\n        //Fetch debt summary\n        //--------------------------------------------------------------------------------\n\n        const sumResponse = await fetch(`http://localhost:8080/v1/debts/my/sum`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!sumResponse.ok) {\n          throw new Error(\"Failed to fetch debts summary!\");\n        }\n        const sumData = await sumResponse.json();\n        setTotalDebt(Number(sumData.total_debt).toFixed(2));\n        setReceiverId(sumData.user_id);\n\n        //--------------------------------------------------------------------------------\n\n        //Fetch all user debts\n        //--------------------------------------------------------------------------------\n\n        const debtsResponse = await fetch(`http://localhost:8080/v1/debts`, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!debtsResponse.ok) {\n          throw new Error(\"Failed to fetch debts!\");\n        }\n        const debtsData = await debtsResponse.json();\n        setDebts(debtsData.debts);\n\n        //--------------------------------------------------------------------------------\n      } catch (error) {\n        localStorage.removeItem('token');\n        navigate('/');\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n\n  // Delete debt\n  //--------------------------------------------------------------------------------\n  const deleteDebt = async debtId => {\n    const token = localStorage.getItem('token');\n    try {\n      const deleteResponse = await fetch(`http://localhost:8080/v1/debts/${debtId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!deleteResponse.ok) {\n        throw new Error(\"Failed to delete debt!\");\n      }\n      setDebts(debts.filter(debt => debt.id !== debtId));\n      setAlertMessage(\"Debt paid successfully!\");\n      setShowAlert(true);\n    } catch (error) {\n      console.log(\"Error deleteing debt:\", error);\n    }\n  };\n\n  //--------------------------------------------------------------------------------\n\n  // Get all users\n  //--------------------------------------------------------------------------------\n  const getUsers = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const usersResponse = await fetch(`http://localhost:8080/v1/users`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!usersResponse.ok) {\n        throw new Error(\"Failed to get all users!\");\n      }\n      const usersData = await usersResponse.json();\n      setUsers(usersData.users);\n    } catch (error) {\n      console.log(\"Error getting users:\", error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  //--------------------------------------------------------------------------------\n\n  const handleSelect = e => {\n    setUserId(e.target.value);\n  };\n\n  // Add debt\n  //--------------------------------------------------------------------------------\n\n  const createDebt = async event => {\n    const token = localStorage.getItem('token');\n    event.preventDefault();\n    const formDetails = {\n      title,\n      receiver: name,\n      receiverId: parseInt(receiverId),\n      amount: parseFloat(debtValue),\n      userId: parseInt(userId)\n    };\n    try {\n      const response = await fetch(\"http://localhost:8080/v1/debts\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(formDetails)\n      });\n      if (response.ok) {\n        setAlertMessage(\"Debt added successfully!\");\n        setShowAlert(true);\n      } else {\n        throw new Error(\"Failed to add debt!\");\n      }\n    } catch (error) {\n      console.error(\"Error while adding debt\", error);\n    }\n  };\n\n  //--------------------------------------------------------------------------------\n\n  // Calculate debt\n  //--------------------------------------------------------------------------------\n\n  const handleNumPeopleChange = e => {\n    const value = parseInt(e.target.value);\n    setNumPeople(value);\n    setSelectedUsers(Array(value).fill(''));\n  };\n  const handleUserSelect = (index, value) => {\n    const newSelectedUsers = [...selectedUsers];\n    newSelectedUsers[index] = value;\n    setSelectedUsers(newSelectedUsers);\n  };\n  const handleAmountChange = (index, value) => {\n    const newAmounts = [...amounts];\n    newAmounts[index] = value;\n    setAmounts(newAmounts);\n  };\n  const handleMoneySpentChange = e => {\n    setMoneySpent(e.target.value);\n  };\n  const handleCalculate = async e => {\n    e.preventDefault();\n    const payments = selectedUsers.reduce((acc, userId, index) => {\n      if (userId) {\n        acc[userId] = parseFloat(amounts[index]);\n      }\n      return acc;\n    }, {});\n    try {\n      const response = await fetch(\"http://localhost:8080/v1/groups/split-debts\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          costs: parseFloat(moneySpent),\n          payments\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response error');\n      }\n      const data = await response.json();\n      console.log(data);\n      setAlertMessage('Debts calculated and added successfully!');\n      setShowAlert(true);\n    } catch (error) {\n      console.error(error);\n      setAlertMessage('Error calculating debts.');\n      setShowAlert(true);\n    }\n  };\n\n  //--------------------------------------------------------------------------------\n\n  // Logout\n  //--------------------------------------------------------------------------------\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/login');\n    window.location.reload();\n  };\n\n  //--------------------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center-text paddings\",\n      children: [\"Welcome:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"color-change\",\n        children: [\" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center-text paddings\",\n      children: [\"Your debt is: \", /*#__PURE__*/_jsxDEV(\"u\", {\n        style: {\n          color: '#ff9500'\n        },\n        children: [totalDebt, \" z\\u0142\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your debts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), debts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"ins\", {\n          children: \"You have no debts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this) // If no debts, show a message\n      : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: debts.map(debt => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"paddings\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                width: '90%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"\\\"\", debt.title, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 63\n              }, this), \" requested by:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                style: {\n                  color: '#ff9500'\n                },\n                children: [\" \", debt.receiver]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 37\n              }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"u\", {\n                children: [debt.amount, \" z\\u0142\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 90\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '10%'\n              },\n              onClick: () => deleteDebt(debt.id),\n              children: \"Paid \\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 33\n          }, this)\n        }, debt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createDebt,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add new receipt here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Debt description\",\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"value\",\n          children: [\"Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Value\",\n            name: \"value\",\n            min: \"0\",\n            step: \"0.01\",\n            onChange: e => setDebtValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiver\",\n          children: [\"Borrower:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"receiver\",\n            onChange: handleSelect,\n            value: userId,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose debtor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), allUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.username\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: '30%'\n          },\n          children: \"Add Debt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCalculate,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Calculate and split debts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ins\", {\n        children: \"Remember, money spent have to be equal to sum of amounts users spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        style: {\n          marginTop: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"money\",\n          children: [\"Money spent:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"money\",\n            placeholder: \"Money spent\",\n            min: \"0\",\n            step: \"0.01\",\n            onChange: handleMoneySpentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"people\",\n          children: [\"How many people:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"people\",\n            placeholder: \"Value\",\n            min: \"0\",\n            step: \"1\",\n            max: allUsers.length,\n            onChange: handleNumPeopleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: Array.from({\n          length: numPeople\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `user-${index}`,\n            children: [\"User \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: `user-${index}`,\n              onChange: e => handleUserSelect(index, e.target.value),\n              value: selectedUsers[index],\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 29\n              }, this), allUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id,\n                children: user.username\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `amount-${index}`,\n            children: [\"Amount spent:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: `amount-${index}`,\n              placeholder: \"Amount\",\n              min: \"0\",\n              step: \"0.01\",\n              onChange: e => handleAmountChange(index, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: '30%'\n          },\n          children: \"Calculate Debts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"outline\",\n        style: {\n          marginBottom: '4em'\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(CustomAlert, {\n      message: alertMessage,\n      onClose: () => setShowAlert(false),\n      onCloseReload: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"eNA2iLm2kJQ/4uxEUidDFQ9s0AM=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","CustomAlert","jsxDEV","_jsxDEV","Dashboard","_s","navigate","totalDebt","setTotalDebt","debts","setDebts","name","setName","receiverId","setReceiverId","allUsers","setUsers","userId","setUserId","title","setTitle","debtValue","setDebtValue","showAlert","setShowAlert","alertMessage","setAlertMessage","numPeople","setNumPeople","selectedUsers","setSelectedUsers","amounts","setAmounts","moneySpent","setMoneySpent","verifyToken","token","localStorage","getItem","console","error","username","response","fetch","ok","Error","sumResponse","method","headers","sumData","json","Number","total_debt","toFixed","user_id","debtsResponse","debtsData","removeItem","deleteDebt","debtId","deleteResponse","filter","debt","id","log","getUsers","usersResponse","usersData","users","handleSelect","e","target","value","createDebt","event","preventDefault","formDetails","receiver","parseInt","amount","parseFloat","body","JSON","stringify","handleNumPeopleChange","Array","fill","handleUserSelect","index","newSelectedUsers","handleAmountChange","newAmounts","handleMoneySpentChange","handleCalculate","payments","reduce","acc","costs","data","handleLogout","clear","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","display","width","onClick","onSubmit","htmlFor","type","placeholder","onChange","min","step","user","marginTop","max","from","_","marginBottom","message","onClose","onCloseReload","_c","$RefreshReg$"],"sources":["/Users/amarchuk/Documents/GitHub/DesignLab/DebtApp/Frontend/debt-app/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport CustomAlert from './CustomAlert';\n\nfunction Dashboard(){\n    const navigate = useNavigate();\n\n    //Const for basic operations like add debt, delete debt, etc.\n    //----------------------------------------------------------\n    const [totalDebt, setTotalDebt] = useState(null);\n    const [debts, setDebts] = useState([]);\n    const [name, setName] = useState('');   // person who is owed\n    const [receiverId, setReceiverId] = useState('');   // person who owes us\n    const [allUsers, setUsers] = useState([]);\n    const [userId, setUserId] = useState('');   // person who owes us\n    const [title, setTitle] = useState('');\n    const [debtValue, setDebtValue] = useState('');\n    //----------------------------------------------------------\n\n    //Const for alert message\n    //----------------------------------------------------------\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    //----------------------------------------------------------\n\n    //Const for calculate debt\n    //----------------------------------------------------------\n    const [numPeople, setNumPeople] = useState(0);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [amounts, setAmounts] = useState([]);\n    const [moneySpent, setMoneySpent] = useState(0);\n    //----------------------------------------------------------\n\n    useEffect(() => {\n        const verifyToken = async () => {\n            const token=localStorage.getItem('token');\n            //For the test\n            //console.log(token);\n            if (!token) {\n                console.error('No token found');\n                navigate('/login');\n                return;\n            }\n\n            const username = localStorage.getItem('username');\n            setName(username);\n\n            try{\n                const response = await fetch(`http://localhost:8080/v1/auth/verifyToken/${token}`);\n\n                if(!response.ok){\n                    throw new Error('Token is verification failed');\n                }\n\n                //Fetch debt summary\n                //--------------------------------------------------------------------------------\n\n                const sumResponse = await fetch(`http://localhost:8080/v1/debts/my/sum`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n\n                if (!sumResponse.ok) {\n                    throw new Error(\"Failed to fetch debts summary!\");\n                }\n\n                const sumData = await sumResponse.json();\n                setTotalDebt(Number(sumData.total_debt).toFixed(2));\n                setReceiverId(sumData.user_id);\n\n                //--------------------------------------------------------------------------------\n\n                //Fetch all user debts\n                //--------------------------------------------------------------------------------\n\n                const debtsResponse = await fetch(`http://localhost:8080/v1/debts`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n\n                if (!debtsResponse.ok) {\n                    throw new Error(\"Failed to fetch debts!\");\n                }\n\n                const debtsData = await debtsResponse.json();\n                setDebts(debtsData.debts);\n\n                //--------------------------------------------------------------------------------\n\n            } catch (error){\n                localStorage.removeItem('token');\n                navigate('/');\n            }\n        };\n        verifyToken();\n    }, [navigate]);\n\n    // Delete debt\n    //--------------------------------------------------------------------------------\n    const deleteDebt = async (debtId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const deleteResponse = await fetch(`http://localhost:8080/v1/debts/${debtId}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            });\n\n            if (!deleteResponse.ok) {\n                throw new Error(\"Failed to delete debt!\");\n            }\n\n            setDebts(debts.filter(debt => debt.id !== debtId));\n            setAlertMessage(\"Debt paid successfully!\");\n            setShowAlert(true);\n        } catch (error) {\n            console.log(\"Error deleteing debt:\", error)\n        }\n    };\n\n    //--------------------------------------------------------------------------------\n\n    // Get all users\n    //--------------------------------------------------------------------------------\n    const getUsers = async () => {\n        const token = localStorage.getItem('token');\n        try {\n            const usersResponse = await fetch(`http://localhost:8080/v1/users`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            });\n\n            if (!usersResponse.ok) {\n                throw new Error(\"Failed to get all users!\");\n            }\n\n            const usersData = await usersResponse.json();\n            setUsers(usersData.users)\n\n        } catch (error) {\n            console.log(\"Error getting users:\", error)\n        }\n    };\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    //--------------------------------------------------------------------------------\n    \n    const handleSelect = (e) => {\n        setUserId(e.target.value);\n    };\n\n    // Add debt\n    //--------------------------------------------------------------------------------\n\n    const createDebt = async (event) => {\n        const token = localStorage.getItem('token');\n        event.preventDefault();\n\n        const formDetails = {\n            title,\n            receiver: name,\n            receiverId: parseInt(receiverId),\n            amount: parseFloat(debtValue),\n            userId: parseInt(userId)\n        }\n\n        try {\n            const response = await fetch(\"http://localhost:8080/v1/debts\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Authorization\": `Bearer ${token}`\n                },\n                body: JSON.stringify(formDetails)\n            });\n\n            if (response.ok) {\n                setAlertMessage(\"Debt added successfully!\");\n                setShowAlert(true);\n            }\n            else {\n                throw new Error(\"Failed to add debt!\");\n            }\n        } catch (error) {\n            console.error(\"Error while adding debt\", error)\n        }\n    };\n\n    //--------------------------------------------------------------------------------\n\n    // Calculate debt\n    //--------------------------------------------------------------------------------\n\n    const handleNumPeopleChange = (e) => {\n        const value = parseInt(e.target.value);\n        setNumPeople(value);\n        setSelectedUsers(Array(value).fill(''));\n    };\n\n    const handleUserSelect = (index, value) => {\n        const newSelectedUsers = [...selectedUsers];\n        newSelectedUsers[index] = value;\n        setSelectedUsers(newSelectedUsers);\n    };\n\n    const handleAmountChange = (index, value) => {\n        const newAmounts = [...amounts];\n        newAmounts[index] = value;\n        setAmounts(newAmounts);\n    };\n\n    const handleMoneySpentChange = (e) => {\n        setMoneySpent(e.target.value);\n    };\n\n    const handleCalculate = async (e) => {\n        e.preventDefault();\n        const payments = selectedUsers.reduce((acc, userId, index) => {\n            if (userId) {\n                acc[userId] = parseFloat(amounts[index]);\n            }\n            return acc;\n        }, {});\n    \n        try {\n            const response = await fetch(\"http://localhost:8080/v1/groups/split-debts\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    costs: parseFloat(moneySpent),\n                    payments\n                })\n            });\n    \n            if (!response.ok) {\n                throw new Error('Network response error');\n            }\n    \n            const data = await response.json();\n            console.log(data);\n            setAlertMessage('Debts calculated and added successfully!');\n            setShowAlert(true);\n        } catch (error) {\n            console.error(error);\n            setAlertMessage('Error calculating debts.');\n            setShowAlert(true);\n        }\n    };\n\n    //--------------------------------------------------------------------------------\n\n    // Logout\n    //--------------------------------------------------------------------------------\n   \n    const handleLogout = () => {\n        localStorage.clear();\n        navigate('/login');\n        window.location.reload();\n    };\n\n    //--------------------------------------------------------------------------------\n\n    return (\n        <main className=\"container\">\n            <h1 className=\"center-text paddings\" >Welcome: \n                <span className='color-change'> {name}</span>\n            </h1>\n            <h3 className=\"center-text paddings\">Your debt is: <u style={{color: '#ff9500'}}>{totalDebt} zł</u></h3>\n            <section>\n                <h4>Your debts:</h4>\n                {debts.length === 0 ? (\n                    <p><ins>You have no debts.</ins></p>  // If no debts, show a message\n                ) : (\n                    <ul>\n                        {debts.map((debt) => (\n                            \n                            <li key={debt.id} className='paddings'>\n                                <div style={{display:'flex'}}>\n                                    <p style={{width: '90%'}}><strong>\"{debt.title}\"</strong> requested by: \n                                    <b style={{color: '#ff9500'}}> {debt.receiver}</b> — <u>{debt.amount} zł</u></p>\n                                    <button style={{width: '10%'}} onClick={() => deleteDebt(debt.id)}>Paid &#10003;</button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </section>\n            <form onSubmit={createDebt}>\n                <h4>Add new receipt here:</h4>\n                    <div className='grid'>\n                    <label htmlFor=\"title\">Title:\n                        <input type=\"text\" name=\"title\" placeholder=\"Debt description\" \n                            onChange={(e) => setTitle(e.target.value)}></input>\n                    </label>\n                    <label htmlFor=\"value\">Value:\n                        <input type=\"number\" placeholder=\"Value\" name=\"value\" min=\"0\" step=\"0.01\"\n                            onChange={(e) => setDebtValue(e.target.value)}></input>\n                    </label>\n                    <label htmlFor=\"receiver\">Borrower:\n                        <select name=\"receiver\" onChange={handleSelect} value={userId}>\n                            <option value=\"\">Choose debtor</option>\n                            {allUsers.map((user) => (\n                                <option key={user.id} value={user.id}>\n                                    {user.username}\n                                </option>\n                            ))}\n                        </select>\n                    </label>\n                </div>\n                <div className=\"center-button\">\n                    <button type=\"submit\" style={{width: '30%'}}>Add Debt</button>\n                </div>\n            </form>\n\n            <form onSubmit={handleCalculate}>\n                <h4>Calculate and split debts:</h4>\n                <ins>Remember, money spent have to be equal to sum of amounts users spent</ins>\n                <div className=\"grid\" style={{marginTop:'1em'}}>\n                    <label htmlFor=\"money\">Money spent:\n                        <input type=\"number\" name=\"money\" placeholder='Money spent' min=\"0\" step=\"0.01\"\n                        onChange={handleMoneySpentChange}></input>\n                    </label>\n                    <label htmlFor=\"people\">How many people:\n                        <input type=\"number\" name=\"people\" placeholder='Value' min=\"0\" step=\"1\" \n                        max={allUsers.length} onChange={handleNumPeopleChange}></input>\n                    </label>\n                </div>\n                <hr></hr>\n                <div className='grid'>\n                {Array.from({ length: numPeople }).map((_, index) => (\n                <div key={index}>\n                    <label htmlFor={`user-${index}`}>User {index + 1}:\n                        <select name={`user-${index}`} onChange={(e) => handleUserSelect(index, e.target.value)} value={selectedUsers[index]}>\n                            <option value=\"\">Choose user</option>\n                            {allUsers.map((user) => (\n                                <option key={user.id} value={user.id}>\n                                    {user.username}\n                                </option>\n                            ))}\n                        </select>\n                    </label>\n                    <label htmlFor={`amount-${index}`}>Amount spent:\n                        <input type=\"number\" name={`amount-${index}`} placeholder='Amount' min=\"0\" step=\"0.01\" onChange={(e) => handleAmountChange(index, e.target.value)} />\n                    </label>\n                </div>\n                ))}\n                </div>\n                <div className=\"center-button\">\n                    <button type=\"submit\" style={{width: '30%'}}>Calculate Debts</button>\n                </div>                \n            </form>\n            <div className=\"center-button\">\n                <button onClick={handleLogout} className='outline' style={{marginBottom:'4em'}}>Logout</button>\n            </div>\n            {showAlert && <CustomAlert message={alertMessage} onClose={() => setShowAlert(false)} onCloseReload={true}/>}\n        </main>\n    )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}